name: CI
on:
  workflow_dispatch:
  push:
    paths:
      - 'src/**'
      - '.github/workflows/ci.yaml'

jobs:
  lint:
    name: Lint
    runs-on: self-hosted
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Super-linter
        uses: super-linter/super-linter@v7.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_CSHARP: true
          VALIDATE_GITHUB_ACTIONS: true
  build-csharp-backend:
    name: Build C# (Backend, ${{ matrix.configuration }})
    runs-on: self-hosted
    permissions:
      contents: read
      packages: read
    strategy:
      matrix:
        configuration: [ Release, Debug ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: 9.0.x
      - name: Cache
        id: cache
        uses: actions/cache@v4.2.0
        with:
          path: |
            ~/.nuget/packages
            **/obj
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.configuration }}-nuget-
      - name: Setup Nuget sources
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          dotnet nuget add source https://nuget.pkg.github.com/saveapis/index.json -n github --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
          dotnet nuget add source ${{ secrets.HANGFIRE_PRO_URL }} -n hangfire-pro --username ${{ secrets.HANGFIRE_PRO_USER }} --password ${{ secrets.HANGFIRE_PRO_TOKEN }} --store-password-in-clear-text
          dotnet nuget add source ${{ secrets.HANGFIRE_ACE_URL }} -n hangfire-ace --username ${{ secrets.HANGFIRE_ACE_USER }} --password ${{ secrets.HANGFIRE_ACE_TOKEN }} --store-password-in-clear-text
      - name: Restore Solution
        if: steps.cache.outputs.cache-hit != 'true'
        run: dotnet restore .
      - name: Build Backend
        run: dotnet build ./src/Backend/Backend.csproj --warnaserror -c ${{ matrix.configuration }} --nologo --no-restore
  build-dockerfile:
    name: Build Dockerfile
    needs:
      - build-csharp-backend
    runs-on: self-hosted
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0
      - name: Build Dockerfile
        uses: docker/build-push-action@v6.10.0
        with:
          context: .
          file: ./src/Backend/Dockerfile
          push: false
          tags: registry.digitalocean.com/saveapis/mrbadexxcoaching-backend:dev
          secrets: |
            "github_user=${{ github.actor }}"
            "github_token=${{ secrets.GITHUB_TOKEN }}"
            "hangfire_pro_url=${{ secrets.HANGFIRE_PRO_URL }}"
            "hangfire_pro_user=${{ secrets.HANGFIRE_PRO_USER }}"
            "hangfire_pro_token=${{ secrets.HANGFIRE_PRO_TOKEN }}"
            "hangfire_ace_url=${{ secrets.HANGFIRE_ACE_URL }}"
            "hangfire_ace_user=${{ secrets.HANGFIRE_ACE_USER }}"
            "hangfire_ace_token=${{ secrets.HANGFIRE_ACE_TOKEN }}"